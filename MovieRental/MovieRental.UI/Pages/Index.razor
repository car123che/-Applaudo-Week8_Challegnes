@page "/"
@inject ILocalStorageService LocalStorage
@inject IMovieService MovieService
@inject ITagService TagService

<PageTitle>Movie Rental</PageTitle>

@if (isUserAuthorized == false)
{
    <h2>Welcome to Our Movie Rental</h2>
}
else
{
    <h2>Hi! Welcome to Our Movie Rental</h2>
}


@if( AllMovies.Count == 0)
{
    <div class="container">
        <h4>No Movies Available</h4>
    </div>
}
else
{
     <div class="btn-group" role="group" aria-label="Button group with nested dropdown">
        <button type="button" class="btn btn-outline-dark" @onclick="GetOrderedMovies" >Order Movies</button>
        <button type="button" class="btn btn-outline-dark" @onclick="GetMoviesByTag">Search By Tag ></button>
        @if (AllTags != null && AllTags.Count > 1)
        {
            <div class="form-group">
                <select class="form-control" @bind="currentTagId">
                    @foreach (var tag in AllTags)
                    {
                        <option value="@tag.Id">@tag.Name</option>
                    }
                </select>
            </div>
        }

        
    </div>

    @foreach (var movie in AllMovies)
    {

        <div class="card mb-3 mt-4" style="max-width: 540px;">
            <div class="row g-0">
                <div class="col">
                    <img src="@movie.Poster" class="img-fluid rounded-start imagenes" alt="@movie.Title">
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h5 class="card-title"><a class="link-movie" href="MovieDetails/@movie.Id">@movie.Title</a></h5>
                        <p>@movie.Description</p>
                        <a class="btn btn-primary" href="rent/@movie.Id" role="button">Rent Me!</a>
                        <a class="btn btn-primary" href="buy/@movie.Id" role="button">Buy Me!</a>
                        <p class="card-text mt-3"><small class="text-body-secondary">Price $@movie.SalePrice. Stock: @movie.Stock</small></p>
                    </div>
                </div>
            </div>
        </div>
           
    }
}


@code {
    private bool isUserAuthorized = false;
    private int counter = 0;
    private int currentTagId = 1;

    private List<MovieDto> AllMovies = new List<MovieDto>();
    private List<TagDto> AllTags = new List<TagDto>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var token = await LocalStorage.GetItemAsync<string>("token");
        if (token == null)
        {
            isUserAuthorized = false;
        }
        else
        {
            isUserAuthorized = true;
        }

        if (counter == 0)
        {
            await GetAllMovies();
            await GetAllTags();
            counter++;
            StateHasChanged();
        }
    }

    private async Task GetAllMovies()
    {
        AllMovies = await MovieService.GetAllMovies();
    }

    private async Task GetOrderedMovies()
    {
        AllMovies = await MovieService.GetOrderedMovies();
    }

    private async Task GetAllTags()
    {
        AllTags = await TagService.GetAllTags();
    }

    private async Task GetMoviesByTag()
    {
        Console.WriteLine("Get Movies By Tag");
        AllMovies = await MovieService.GetMoviesByTag(currentTagId);
    }

}